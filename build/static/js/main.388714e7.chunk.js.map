{"version":3,"sources":["logo.svg","components/Profile.jsx","getWeb3.js","components/TransactionCard.jsx","components/TransactionList.jsx","components/Contact.jsx","components/ContactList.jsx","components/HomePage.jsx","components/PaymentBar.jsx","components/AddToContact.jsx","components/ProfilePage.jsx","components/TransactionPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","props","render","id","className","this","address","state","balance","web3","eth","getBalance","bal","utils","fromWei","setState","Component","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","console","log","Web3","enable","web3Provider","providers","HttpProvider","TransactionCard","from","to","value","gasUsed","getTransaction","tx","hash","gas","date","toString","href","TransactionList","listOfTransactions","list","map","t","index","key","Contact","contact","name","ContactList","list_of_contacts","txList","Date","savedAccounts","HomePage","providedAddress","contacts","transactions","getAccounts","balEth","xval","PaymentBar","handleAmountChange","event","preventDefault","amount","target","handleUnitChange","newUnit","unit","handlePayment","amt","paymentMethod","type","onChange","onClick","AddToContact","createContact","prompt","saving","owner","myAddress","currentAddress","showContact","ProfilePage","makePayment","toWei","sendTransaction","then","receipt","err","error","finally","match","params","currentBalance","myAddr","curBal","valueConvertor","Transaction","txHash","txRes","blockHash","blockNumber","gasPrice","nonce","App","web3Ins","path","component","exact","TransactionPage","React","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"yKAAAA,EAAOC,QAAU,IAA0B,kC,0lBC6B5BC,G,gEAzBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAgBVC,OAAS,WACL,OAAO,yBAAKC,GAAG,UAAUC,UAAU,oBAC/B,2BAAIC,KAAKJ,MAAMK,SACf,2BAAG,sCAAH,MAAqBD,KAAKE,MAAMC,QAAhC,IAAyC,4BAAzC,aAlBJ,EAAKD,MAAQ,CAACC,QAAS,GAFT,E,yMASMH,KAAKJ,MAAMQ,KAAKC,IAAIC,WAAWN,KAAKJ,MAAMK,S,cAAtDM,E,gBACQP,KAAKJ,MAAMQ,KAAKI,MAAMC,QAAQF,EAAK,S,OAA/CA,E,OACAP,KAAKU,SAAS,CAACP,QAASI,I,uKAZdI,c,iBC0BPC,EA3BC,kBACZ,IAAIC,SAAQ,SAACC,EAASC,GAClBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAEzBF,OAAOG,SAFkB,wBAGxBC,QAAQC,IAAI,gCACNjB,EAAO,IAAIkB,IAAKN,OAAOG,UAC7BC,QAAQC,IAAIjB,GALY,kBAOdY,OAAOG,SAASI,SAPF,OAQpBT,EAAQV,GARY,kDAUpBW,EAAO,EAAD,IAVc,gCAYlBC,OAAOZ,MACbgB,QAAQC,IAAI,gDACNjB,EAAOY,OAAOZ,KACpBU,EAAQV,KAERgB,QAAQC,IAAI,iEACNG,EAAe,IAAIF,IAAKG,UAAUC,aAAa,yBAC/CtB,EAAO,IAAIkB,IAAKE,GACtBV,EAAQV,IApBgB,+D,QCmDzBuB,E,kDAlDX,WAAY/B,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAQ,CAAC0B,KAAM,KAAMC,GAAI,KAAMC,MAAO,KAAMC,QAAS,MAF5C,E,gMAMC/B,KAAKJ,MAAMQ,KAAKC,IAAI2B,eAAehC,KAAKJ,MAAMqC,GAAGC,M,OAA5DD,E,OACJjC,KAAKU,SAAS,CAACkB,KAAMK,EAAGL,KAAMC,GAAII,EAAGJ,GAAIC,MAAOG,EAAGH,MAAOC,QAASE,EAAGE,M,qIAEhE,IAAD,OACL,OACI,yBAAKpC,UAAU,aACX,2BACI,kBAAC,IAAD,CAAM8B,GAAI,iBAAK,gBAAgB,EAAKjC,MAAMqC,GAAGC,OACxClC,KAAKJ,MAAMqC,GAAGC,MAEnB,6BACA,+BAAKlC,KAAKJ,MAAMqC,GAAGG,KAAKC,WAAxB,MAEJ,yBAAKtC,UAAU,iBACX,yBAAKA,UAAU,iBACX,2BACI,sCACA,uBAAGuC,KAAM,YAAYtC,KAAKE,MAAM0B,MAC3B5B,KAAKE,MAAM0B,QAIxB,yBAAK7B,UAAU,iBACf,2BACQ,oCACA,uBAAGuC,KAAM,YAAYtC,KAAKE,MAAM2B,IAC3B7B,KAAKE,MAAM2B,OAK5B,yBAAK9B,UAAU,iBACX,yBAAKA,UAAU,iBACX,2BAAG,uCAAH,IAAoBC,KAAKE,MAAM4B,MAA/B,aAEJ,yBAAK/B,UAAU,iBACX,2BAAG,0CAAH,IAAuBC,KAAKE,MAAM6B,QAAlC,kB,GA5CMpB,aCoBf4B,E,uKAnBD,IAAD,OACDC,EAAsBxC,KAAKJ,MAAM6C,KAAKC,KAAI,SAACC,EAAGC,GAC1B,OAAO,yBAAK7C,UAAU,gBAAgB8C,IAAK,MAAMD,GACrC,yBAAK7C,UAAU,0BACV6C,EAAM,GAEX,yBAAK7C,UAAU,wBACX,kBAAC,EAAD,CAAiBkC,GAAMU,EAAGvC,KAAQ,EAAKR,MAAMQ,YAIrF,OACI,yBAAKL,UAAU,oBACVyC,O,GAda7B,aCWfmC,E,uKAVD,IAAD,OACL,OACI,yBAAK/C,UAAU,aACX,2BAAG,kBAAC,IAAD,CAAM8B,GAAI,iBAAI,YAAY,EAAKjC,MAAMmD,QAAQ9C,UAAUD,KAAKJ,MAAMmD,QAAQC,OAC7E,2BAAIhD,KAAKJ,MAAMmD,QAAQ9C,c,GALjBU,aCoBPsC,E,uKAlBP,IAAIC,EAAmBlD,KAAKJ,MAAM6C,KAAKC,KAAI,SAACK,EAASH,GACjD,OAAQ,yBAAK7C,UAAU,wBACX,yBAAKA,UAAU,gCACV6C,GAEL,yBAAK7C,UAAU,iBACX,kBAAC,EAAD,CAASgD,QAASA,SAItC,OACI,6BACKG,O,GAdSvC,aCKpBwC,EAAS,CACX,CACIjB,KAAM,qEACNE,KAAM,IAAIgB,KAAK,eAEnB,CACIlB,KAAM,qEACNE,KAAM,IAAIgB,KAAK,gBAIjBC,EAAgB,CAClB,CAACL,KAAM,QAAS/C,QAAS,8CACzB,CAAC+C,KAAM,SAAU/C,QAAS,+CAgDfqD,E,kDA5CX,WAAY1D,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAQ,CAACqD,gBAAgB,EAAKpD,QAAQ,EAAGqD,SAAS,GAAIC,aAAa,IAF1D,E,6MAOUzD,KAAKJ,MAAMQ,KAAKC,IAAIqD,c,cACxCzD,GADIA,E,QACc,G,SACFD,KAAKJ,MAAMQ,KAAKC,IAAIC,WAAWL,G,OAA3CM,E,OACAoD,EAAS3D,KAAKJ,MAAMQ,KAAKI,MAAMC,QAAQF,EAAK,SAChDP,KAAKU,SAAS,CAAC6C,gBAAiBtD,EAASE,QAAQwD,IAGjD3D,KAAKU,SAAS,CAAC+C,aAAcN,EAAQK,SAAUH,I,kDAEhDjC,QAAQC,IAAI,oB,+IAIf,OACI,yBAAKvB,GAAK,UAAUC,UAAU,aAC1B,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,0CACA,kBAAC,EAAD,CAASE,QAASD,KAAKE,MAAMqD,gBAAiBnD,KAAMJ,KAAKJ,MAAMQ,KAAMwD,KAAK,UAE9E,yBAAK7D,UAAU,iBACX,2CACA,kBAAC,EAAD,CAAa0C,KAAMzC,KAAKE,MAAMsD,aAGtC,6BACA,yBAAKzD,UAAU,uBACX,yBAAKA,UAAU,iBACX,+CACA,kBAAC,EAAD,CAAiB0C,KAAMzC,KAAKE,MAAMuD,aAAcrD,KAAQJ,KAAKJ,MAAMQ,c,GArCpEO,aCYRkD,E,kDAjCX,WAAYjE,GAAO,IAAD,8BACd,cAAMA,IAIVkE,mBAAqB,SAACC,GAClBA,EAAMC,iBACN,EAAKtD,SAAS,CAACuD,OAAQF,EAAMG,OAAOpC,SAPtB,EAUlBqC,iBAAmB,SAACJ,GAChBA,EAAMC,iBACN,IAAII,EAAUL,EAAMG,OAAOpC,MAC3B,EAAKpB,SAAS,CAAC2D,KAAMD,KAbP,EAgBlBE,cAAgB,WACZ,IAAIC,EAAM,EAAKrE,MAAM+D,OACrB,EAAKrE,MAAM4E,cAAcD,IAhBzB,EAAKrE,MAAQ,CAAC+D,OAAQ,EAAGI,KAAM,OAFjB,E,qDAqBR,IAAD,OACL,OAAS,yBAAKtE,UAAU,oBACpB,2BAAO0E,KAAK,OAAO3E,GAAG,SAASkD,KAAK,SAAS0B,SAAU1E,KAAK8D,mBAAoBhC,MAAO9B,KAAKE,MAAM+D,SAClG,4BAAQnE,GAAG,OAAOkD,KAAK,OAAO0B,SAAU1E,KAAKmE,kBACzC,4BAAQrC,MAAM,OAAd,SACA,4BAAQA,MAAM,OAAd,QAEJ,4BAAQ2C,KAAK,SAASE,QAAS,kBAAM,EAAK/E,MAAM4E,cAAc,EAAKtE,MAAM+D,OAAQ,EAAK/D,MAAMmE,QAA5F,Y,GA7Ba1D,aC2BViE,E,4MAzBXC,cAAgB,WACR,IAAI7B,EAAO8B,SACPC,EAAS,CAACC,MAAO,EAAKpF,MAAMqF,UAAWlC,QAAS,EAAKnD,MAAMsF,eAAgBlC,KAAMA,GACrF5B,QAAQC,IAAI0D,I,4DASZ,OAAO,4BAAQN,KAAK,SAASE,QAAS3E,KAAK6E,eAApC,kB,+BAKX,OACI,yBAAK9E,UAAU,aACVC,KAAKmF,mB,GArBKxE,aCMrBwC,EAAS,CACX,CACIjB,KAAM,qEACNE,KAAM,IAAIgB,KAAK,eAEnB,CACIlB,KAAM,qEACNE,KAAM,IAAIgB,KAAK,gBA0ERgC,E,kDApEX,WAAYxF,GAAO,IAAD,8BACd,cAAMA,IAqBVyF,YAAc,SAACpB,EAAQI,GAEnB,IACI,IAAIpC,EAAK,CACGL,KAAM,EAAK1B,MAAM+E,UACjBpD,GAAI,EAAK3B,MAAMgF,eACfpD,MAAe,QAAPuC,EAAc,EAAKzE,MAAMQ,KAAKI,MAAM8E,MAAMrB,EAAQ,SAASA,GAE/E7C,QAAQC,IAAIY,GACZ,EAAKrC,MAAMQ,KAAKC,IAAIkF,gBAAgBtD,GAAIuD,MAAK,SAACC,GAC1CrE,QAAQC,IAAI,2BACZD,QAAQC,IAAIoE,MAEhB,SAACC,GACGtE,QAAQuE,MAAMD,MACfE,SAAQ,WACPxE,QAAQC,IAAI,4BAEnB,MAAMqE,GACHtE,QAAQC,IAAIqE,KAvChB,EAAKxF,MAAQ,CACG+E,UAAW,KACXC,eAAgB,EAAKtF,MAAMiG,MAAMC,OAAO7F,QACxC8F,eAAgB,EAChBtC,aAAc,IANhB,E,2MAYYzD,KAAKJ,MAAMQ,KAAKC,IAAIqD,c,cAApCsC,E,OAAmD,G,SACrChG,KAAKJ,MAAMQ,KAAKC,IAAIC,WAAWN,KAAKE,MAAMgF,gB,OAA1De,E,OACJA,EAASjG,KAAKJ,MAAMQ,KAAKI,MAAMC,QAAQwF,EAAQ,SAC/CjG,KAAKU,SAAS,CAACuE,UAAWe,EAAQD,eAAgBE,EAAQxC,aAAaN,I,kDAEvE/B,QAAQC,IAAI,O,+IA+BhB,OADAD,QAAQC,IAAI,cAAerB,KAAKJ,MAAMiG,MAAMC,QAExC,yBAAKhG,GAAG,eACJ,yBAAKC,UAAU,gDAAgDD,GAAG,UAC9D,uBAAGC,UAAU,gBAAb,cACA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMA,UAAU,kBAAkB8B,GAAG,KAArC,UAGR,yBAAK/B,GAAK,WACN,8CACA,kBAAC,EAAD,CAASG,QAASD,KAAKE,MAAMgF,eAAgB9E,KAAMJ,KAAKJ,MAAMQ,OAC9D,kBAAC,EAAD,CAAc6E,UAAWjF,KAAKE,MAAM+E,UAAWC,eAAgBlF,KAAKE,MAAMgF,iBAC1E,kBAAC,EAAD,CAAYV,cAAexE,KAAKqF,YAAaa,eAAgBlG,KAAKJ,MAAMQ,OACxE,kBAAC,EAAD,CAAiBqC,KAAMzC,KAAKE,MAAMuD,aAAcrD,KAAQJ,KAAKJ,MAAMQ,a,GA9D7DO,aC4DXwF,E,kDA3EX,WAAYvG,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAQ,GAFC,E,sLAMA,G,kBAEQF,KAAKJ,MAAMQ,KAAKC,IAAI2B,eAAehC,KAAKJ,MAAMiG,MAAMC,OAAOM,Q,OAAzEC,E,OACJrG,KAAKU,SAAS2F,G,8LAMZ,IAAD,OACL,OACI,yBAAKvG,GAAK,mBACN,yBAAKC,UAAU,gDAAgDD,GAAG,UAC9D,uBAAGC,UAAU,gBAAb,cACA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMA,UAAU,kBAAkB8B,GAAG,KAArC,UAIR,8CAAoB7B,KAAKJ,MAAMiG,MAAMC,OAAOM,OAA5C,KACA,yBAAKtG,GAAG,UACJ,2BAAOA,GAAG,UAAUC,UAAU,wBAC1B,4BACI,yCACA,sCAEJ,4BACI,+CACA,4BAAKC,KAAKE,MAAMgC,OAEpB,4BACI,oCACA,4BAAI,kBAAC,IAAD,CAAML,GAAI,iBAAI,YAAY,EAAK3B,MAAM0B,OAAO5B,KAAKE,MAAM0B,QAE/D,4BACI,kCACA,4BAAI,kBAAC,IAAD,CAAMC,GAAI,iBAAI,YAAY,EAAK3B,MAAM2B,KAAK7B,KAAKE,MAAM2B,MAE7D,4BACI,0CACA,4BAAK7B,KAAKE,MAAMoG,YAEpB,4BACI,4CACA,4BAAKtG,KAAKE,MAAMqG,cAEpB,4BACI,mCACA,4BAAKvG,KAAKE,MAAMiC,MAEpB,4BACI,yCACA,4BAAKnC,KAAKE,MAAMsG,WAEpB,4BACI,qCACA,4BAAKxG,KAAKE,MAAMuG,QAEpB,4BACI,qCACA,4BAAKzG,KAAKE,MAAM4B,e,GApElBnB,a,QCkCX+F,E,kDA1Bb,WAAY9G,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,CAACE,KAAK,MAFH,E,gMAMIQ,I,OAAhB+F,E,OACJ3G,KAAKU,SAAS,CAACN,KAAMuG,I,qIAEd,IAAD,OAYN,OAVA,6BACE,kBAAC,IAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAa,kBAAM,kBAAC,EAAD,CAAUzG,KAAQ,EAAKF,MAAME,QAAU4C,KAAK,aACnF,kBAAC,IAAD,CAAO4D,KAAK,oBAAoBC,UAAa,SAACjH,GAAD,OAAW,kBAAC,EAAD,eAAaQ,KAAQ,EAAKF,MAAME,MAAUR,KAAWoD,KAAK,gBAClH,kBAAC,IAAD,CAAO4D,KAAK,uBAAuBE,OAAK,EAACD,UAAa,SAACjH,GAAD,OAAW,kBAACmH,EAAD,eAAiB3G,KAAQ,EAAKF,MAAME,MAAUR,KAAWoD,KAAK,gBAC/H,kBAAC,IAAD,CAAOpB,KAAK,KAAI,kBAAC,IAAD,CAAUA,KAAK,GAAGC,GAAG,kB,GAnB3BmF,IAAMrG,WCGJsG,QACW,cAA7BjG,OAAOkG,SAASC,UAEe,UAA7BnG,OAAOkG,SAASC,UAEhBnG,OAAOkG,SAASC,SAAStB,MACvB,2DCZNuB,IAASvH,OACP,kBAAC,IAAMwH,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlC,MAAK,SAAAmC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlC,GACLvE,QAAQuE,MAAMA,EAAMmC,c","file":"static/js/main.388714e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nclass Profile extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {balance: 0};\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n\r\n        try {\r\n            var bal = await this.props.web3.eth.getBalance(this.props.address);\r\n            bal = await this.props.web3.utils.fromWei(bal, \"ether\");\r\n            this.setState({balance: bal});\r\n        } catch{\r\n\r\n        }\r\n    }\r\n\r\n    render = function(){\r\n        return(<div id='profile' className='container border'>\r\n            <p>{this.props.address}</p>\r\n            <p><b>Balance</b> : {this.state.balance} <s></s> ethers</p>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Profile;","import Web3 from 'web3';\r\n\r\nconst getWeb3 = ()=>\r\n    new Promise((resolve, reject) => {\r\n        window.addEventListener(\"load\", async () => {\r\n            // Modern dapp browser\r\n            if(window.ethereum){\r\n                console.log(\"Modern dapp broser detected!\");\r\n                const web3 = new Web3(window.ethereum);\r\n                console.log(web3);\r\n                try{\r\n                    await window.ethereum.enable();\r\n                    resolve(web3);\r\n                }catch(error){\r\n                    reject(error);\r\n                }\r\n            } else if(window.web3){\r\n                console.log(\"Legacy dapp browser, injected web3 detected!\");\r\n                const web3 = window.web3;\r\n                resolve(web3);\r\n            } else{\r\n                console.log(\"No web3 provider detected, connecting to local web3 provider!\");\r\n                const web3Provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\r\n                const web3 = new Web3(web3Provider);\r\n                resolve(web3);\r\n            }\r\n        })\r\n    });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass TransactionCard extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {from: null, to: null, value: null, gasUsed: null};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var tx = await this.props.web3.eth.getTransaction(this.props.tx.hash);\r\n        this.setState({from: tx.from, to: tx.to, value: tx.value, gasUsed: tx.gas});\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <p>\r\n                    <Link to={()=> '/transaction/'+this.props.tx.hash}>\r\n                        {this.props.tx.hash}\r\n                    </Link>\r\n                    <br/>\r\n                    <b>({this.props.tx.date.toString()})</b>\r\n                </p>\r\n                <div className='container row'>\r\n                    <div className='container col'>\r\n                        <p>\r\n                            <b>From - </b>\r\n                            <a href={'/profile/'+this.state.from}>\r\n                                {this.state.from}\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                    <div className='container col'>\r\n                    <p>\r\n                            <b>To - </b>\r\n                            <a href={'/profile/'+this.state.to}>\r\n                                {this.state.to}\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='container row'>\r\n                    <div className='container col'>\r\n                        <p><b>Value - </b> {this.state.value} ethers </p>\r\n                    </div>\r\n                    <div className='container col'>\r\n                        <p><b>Gas Used - </b> {this.state.gasUsed} ethers</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TransactionCard;","import React, { Component } from 'react';\r\nimport TransactionCard from './TransactionCard';\r\n\r\nclass TransactionList extends Component {\r\n    render() {\r\n        var listOfTransactions =  this.props.list.map((t, index)=> {\r\n                                return <div className='container row' key={'tx-'+index}>\r\n                                            <div className=\"container col-1 border\">\r\n                                                {index+1}\r\n                                            </div>\r\n                                            <div className=\"container col border\">\r\n                                                <TransactionCard tx = {t} web3 = {this.props.web3}/>\r\n                                            </div>\r\n                                        </div>\r\n                                });\r\n        return ( \r\n            <div className=\"container border\">\r\n                {listOfTransactions}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default TransactionList;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <p><Link to={()=>'/profile/'+this.props.contact.address}>{this.props.contact.name}</Link></p>\r\n                <p>{this.props.contact.address}</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\nclass ContactList extends Component {\r\n    render() { \r\n        var list_of_contacts = this.props.list.map((contact, index)=> {\r\n            return (<div className='container row border'>\r\n                        <div className='container col-1 border-right'>\r\n                            {index}\r\n                        </div>\r\n                        <div className='container col'>\r\n                            <Contact contact={contact}/>\r\n                        </div>     \r\n                    </div>)\r\n        });\r\n        return ( \r\n            <div>\r\n                {list_of_contacts}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport getWeb3 from '../getWeb3';\r\nimport TransactionList from './TransactionList';\r\nimport ContactList from './ContactList';\r\n//import TransactionList from './TransactionList';\r\n\r\n// dummy transactions\r\nconst txList = [\r\n    { \r\n        hash: \"0x0356c9a5b86d4b085abb6b0ed0058758bd68ca6d1f6928d5ebd368088e3fa9ea\",\r\n        date: new Date(\"2019-05-13\")\r\n    },\r\n    {\r\n        hash: \"0x304b9de0021fcec047b27fce0939544c46c9edf86e57e9663b15d79812e253e4\",\r\n        date: new Date(\"2019-07-17\")\r\n    }\r\n];\r\n\r\nconst savedAccounts = [\r\n    {name: \"Alice\", address: \"0x072Ee7De3d14c072f2a993F22C071606B498f527\"},\r\n    {name: \"Raghav\", address: \"0xcaca4cd658a660083C4c0b55281bE79849Ff6bB0\"}\r\n]\r\n\r\nclass HomePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {providedAddress:0x0, balance:0, contacts:[], transactions:[]};\r\n    }\r\n\r\n   async componentDidMount(){\r\n       try{\r\n            var address = await this.props.web3.eth.getAccounts();\r\n            address = address[0];\r\n            var bal = await this.props.web3.eth.getBalance(address);\r\n            var balEth = this.props.web3.utils.fromWei(bal, \"ether\");\r\n            this.setState({providedAddress: address, balance:balEth});\r\n            \r\n            // dummy data\r\n            this.setState({transactions: txList, contacts: savedAccounts});\r\n       }catch{\r\n           console.log(\"Loading address!\");\r\n       }\r\n   }\r\n    render() { \r\n        return ( \r\n            <div id = 'My Page' className=\"container\">\r\n                <div className=\"container row\">\r\n                    <div className=\"container col-5\">\r\n                        <h1>My Profile</h1>\r\n                        <Profile address={this.state.providedAddress} web3={this.props.web3} xval=\"Test\"/>\r\n                    </div>\r\n                    <div className=\"container col\">\r\n                        <h1>My Contacts</h1>\r\n                        <ContactList list={this.state.contacts}/>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"container-fluid row\">\r\n                    <div className=\"container col\">\r\n                        <h1>My Transactions</h1>\r\n                        <TransactionList list={this.state.transactions} web3 = {this.props.web3}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default HomePage;","import React, { Component } from 'react';\r\n\r\nclass PaymentBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {amount: 0, unit: \"eth\"};\r\n    }\r\n\r\n    handleAmountChange = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({amount: event.target.value});\r\n    }\r\n\r\n    handleUnitChange = (event) =>{\r\n        event.preventDefault();\r\n        var newUnit = event.target.value;\r\n        this.setState({unit: newUnit});\r\n    }\r\n\r\n    handlePayment = () =>{\r\n        var amt = this.state.amount;\r\n        this.props.paymentMethod(amt);\r\n    }\r\n\r\n    render() { \r\n        return ( <div className=\"container border\">\r\n            <input type=\"text\" id=\"amount\" name=\"amount\" onChange={this.handleAmountChange} value={this.state.amount}/>\r\n            <select id=\"unit\" name=\"unit\" onChange={this.handleUnitChange}>\r\n                <option value=\"eth\">Ether</option>\r\n                <option value=\"wei\">Wei</option>\r\n            </select>\r\n            <button type=\"submit\" onClick={() => this.props.paymentMethod(this.state.amount, this.state.unit)}>Pay</button>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default PaymentBar;","import React, { Component } from 'react';\r\n\r\nclass AddToContact extends Component {\r\n    \r\n    createContact = ()=>{\r\n            var name = prompt();\r\n            var saving = {owner: this.props.myAddress, contact: this.props.currentAddress, name: name};\r\n            console.log(saving);\r\n            // add api call\r\n    }\r\n\r\n    showContact(){\r\n        var isContact = false; // add api call\r\n        if(isContact){\r\n            return null;\r\n        }else{\r\n            return <button type=\"submit\" onClick={this.createContact}>Save contact</button>\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                {this.showContact()}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddToContact;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport {Link} from 'react-router-dom';\r\nimport TransactionList from './TransactionList';\r\nimport PaymentBar from './PaymentBar';\r\nimport AddToContact from './AddToContact';\r\n\r\n// dummy transactions\r\nconst txList = [\r\n    { \r\n        hash: \"0x0356c9a5b86d4b085abb6b0ed0058758bd68ca6d1f6928d5ebd368088e3fa9ea\",\r\n        date: new Date(\"2019-05-13\")\r\n    },\r\n    {\r\n        hash: \"0x304b9de0021fcec047b27fce0939544c46c9edf86e57e9663b15d79812e253e4\",\r\n        date: new Date(\"2019-07-17\")\r\n    }\r\n];\r\n\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n                        myAddress: null, \r\n                        currentAddress: this.props.match.params.address, \r\n                        currentBalance: 0,\r\n                        transactions: [],\r\n                    };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const myAddr = (await this.props.web3.eth.getAccounts())[0];\r\n            var curBal = (await this.props.web3.eth.getBalance(this.state.currentAddress));\r\n            curBal = this.props.web3.utils.fromWei(curBal, \"ether\");\r\n            this.setState({myAddress: myAddr, currentBalance: curBal, transactions:txList});    \r\n        }catch{\r\n            console.log(\"Err\")\r\n        }\r\n        \r\n    }\r\n\r\n    makePayment = (amount, unit) => {\r\n\r\n        try{\r\n            var tx = {\r\n                        from: this.state.myAddress, \r\n                        to: this.state.currentAddress, \r\n                        value: (unit===\"eth\")?this.props.web3.utils.toWei(amount, \"ether\"):amount\r\n                    };\r\n            console.log(tx);\r\n            this.props.web3.eth.sendTransaction(tx).then((receipt)=>{\r\n                console.log(\"Transaction Successful!\");\r\n                console.log(receipt);\r\n            }, \r\n            (err)=>{\r\n                console.error(err);\r\n            }).finally(()=>{\r\n                console.log(\"Transaction complete!\");\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    render() { \r\n        console.log(\"Matched url\", this.props.match.params);\r\n        return ( \r\n            <div id='ProfilePage'>\r\n                <div className=\"navbar navbar-expand-lg bg-light navbar-light\" id='navbar'>\r\n                    <p className=\"navbar-brand\">EthContact</p>\r\n                    <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n                    </div>\r\n                </div>\r\n                <div id = 'content'>\r\n                    <h1> Profile Page </h1>\r\n                    <Profile address={this.state.currentAddress} web3={this.props.web3}/>\r\n                    <AddToContact myAddress={this.state.myAddress} currentAddress={this.state.currentAddress}/>\r\n                    <PaymentBar paymentMethod={this.makePayment} valueConvertor={this.props.web3}/>\r\n                    <TransactionList list={this.state.transactions} web3 = {this.props.web3}/>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilePage;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Transaction extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var entries = [];\r\n        try{\r\n            var txRes = await this.props.web3.eth.getTransaction(this.props.match.params.txHash);\r\n            this.setState(txRes);\r\n        }catch{\r\n\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div id = 'TransactionPage'>\r\n                <div className=\"navbar navbar-expand-lg bg-light navbar-light\" id='navbar'>\r\n                    <p className=\"navbar-brand\">EthContact</p>\r\n                    <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n                    </div>\r\n                </div>\r\n                \r\n                <h2> Transaction - {this.props.match.params.txHash} </h2>\r\n                <div id='result'>\r\n                    <table id='resList' className=\"table table-bordered\">\r\n                        <tr>\r\n                            <th>Parameter</th>\r\n                            <th>Value</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Transction Hash</td>\r\n                            <td>{this.state.hash}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>From</td>\r\n                            <td><Link to={()=>'/profile/'+this.state.from}>{this.state.from}</Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>To</td>\r\n                            <td><Link to={()=>'/profile/'+this.state.to}>{this.state.to}</Link></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Block Hash</td>\r\n                            <td>{this.state.blockHash}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Block Number</td>\r\n                            <td>{this.state.blockNumber}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gas</td>\r\n                            <td>{this.state.gas}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gas Price</td>\r\n                            <td>{this.state.gasPrice}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Nonce</td>\r\n                            <td>{this.state.nonce}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Value</td>\r\n                            <td>{this.state.value}</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Transaction;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/HomePage';\nimport ProfilePage from './components/ProfilePage';\nimport TransactionPage from './components/TransactionPage';\nimport {BrowserRouter, Route, Link, Switch, Redirect} from 'react-router-dom';\nimport getWeb3 from './getWeb3';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {web3:null};\n  }\n\n  async componentDidMount(){\n    var web3Ins = await getWeb3();\n    this.setState({web3: web3Ins});\n  }\n  render(){\n    var page = \n    <div>\n      <BrowserRouter>\n      <Switch>\n        <Route path='/home' component = {() => <HomePage web3 = {this.state.web3}/> } name=\"homepage\"></Route>\n        <Route path='/profile/:address' component = {(props) => <ProfilePage web3 = {this.state.web3} {...props}/> } name=\"profilepage\"></Route>\n        <Route path='/transaction/:txHash' exact component = {(props) => <TransactionPage web3 = {this.state.web3} {...props}/> } name=\"profilepage\"></Route>\n        <Route from='/'><Redirect from=\"\" to=\"/home\"/></Route>\n      </Switch>\n      </BrowserRouter>\n    </div>;\n    return page;\n    //return <div>Waiting for web3!</div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}