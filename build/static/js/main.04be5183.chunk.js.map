{"version":3,"sources":["logo.svg","components/Profile.jsx","getWeb3.js","components/TransactionCard.jsx","components/TransactionList.jsx","components/Contact.jsx","components/ContactList.jsx","components/SearchBar.jsx","components/HomePage.jsx","components/PaymentBar.jsx","components/AddToContact.jsx","components/ProfilePage.jsx","components/TransactionPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","props","render","id","className","this","address","state","balance","_isMounted","web3","eth","getBalance","bal","utils","fromWei","setState","console","error","Component","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","log","Web3","enable","web3Provider","providers","HttpProvider","TransactionCard","txDate","Date","tx","date_of_transaction","from","to","value","gasUsed","date","getTransaction","txHash","gas","toString","href","TransactionList","listOfTransactions","list","map","t","index","key","length","Contact","contact","contact_address","contact_name","ContactList","list_of_contacts","SearchBar","handleAddressChange","event","preventDefault","addr","target","goToProfile","location","name","type","onChange","onClick","HomePage","providedAddress","contacts","transactions","errors","getAccounts","axios","get","params","owner","then","resp","status","data","alert","statusText","err","PaymentBar","handleAmountChange","amount","handleUnitChange","newUnit","unit","handlePayment","amt","paymentMethod","AddToContact","createContact","prompt","saving","myAddress","currentAddress","post","isContact","showContact","ProfilePage","makePayment","toWei","sendTransaction","receipt","transactionHash","finally","match","currentBalance","myAddr","curBal","valueConvertor","Transaction","txRes","hash","blockHash","blockNumber","gasPrice","nonce","App","web3Ins","path","component","exact","TransactionPage","React","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.04be5183.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nclass Profile extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        //console.log(this.props);\r\n        this.state = {balance: 0};\r\n        this._isMounted = false;\r\n    }\r\n\r\n    /*\r\n        async componentDidMount(){\r\n            console.log(\"called Profile.componentDidMount()\");\r\n            try {\r\n                console.log(this.props.address);\r\n                var bal = await this.props.web3.eth.getBalance(this.props.address);\r\n                bal = await this.props.web3.utils.fromWei(bal, \"ether\");\r\n                this.setState({balance: bal});\r\n            } catch(err){\r\n                console.error(err);\r\n            }\r\n        }\r\n    */\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n    }\r\n\r\n    async componentDidUpdate(){\r\n        try {\r\n            var bal = await this.props.web3.eth.getBalance(this.props.address);\r\n            bal = await this.props.web3.utils.fromWei(bal, \"ether\");\r\n            if(this._isMounted)\r\n                this.setState({balance: bal});\r\n        } catch(err){\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n    \r\n    render = function(){\r\n        return(<div id='profile' className='container border'>\r\n            <p>{this.props.address}</p>\r\n            <p><b>Balance</b> : {this.state.balance} <s></s> ethers</p>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Profile;","import Web3 from 'web3';\r\n\r\nconst getWeb3 = ()=>\r\n    new Promise((resolve, reject) => {\r\n        window.addEventListener(\"load\", async () => {\r\n            // Modern dapp browser\r\n            if(window.ethereum){\r\n                console.log(\"Modern dapp broser detected!\");\r\n                const web3 = new Web3(window.ethereum);\r\n                //console.log(web3);\r\n                try{\r\n                    await window.ethereum.enable();\r\n                    resolve(web3);\r\n                }catch(error){\r\n                    reject(error);\r\n                }\r\n            } else if(window.web3){\r\n                console.log(\"Legacy dapp browser, injected web3 detected!\");\r\n                const web3 = window.web3;\r\n                resolve(web3);\r\n            } else{\r\n                console.log(\"No web3 provider detected, connecting to local web3 provider!\");\r\n                const web3Provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\r\n                const web3 = new Web3(web3Provider);\r\n                resolve(web3);\r\n            }\r\n        })\r\n    });\r\n\r\nexport default getWeb3;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass TransactionCard extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        var txDate = new Date(this.props.tx.date_of_transaction);\r\n        this.state = {from: null, to: null, value: null, gasUsed: null, date: txDate};\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var tx = await this.props.web3.eth.getTransaction(this.props.tx.txHash);\r\n        if(tx)\r\n            this.setState({from: tx.from, to: tx.to, value: tx.value, gasUsed: tx.gas});\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <p>\r\n                    <Link to={()=> '/transaction/'+this.props.tx.txHash}>\r\n                        {this.props.tx.txHash}\r\n                    </Link>\r\n                    <br/>\r\n                    <b>({this.state.date.toString()})</b>\r\n                </p>\r\n                <div className='container row'>\r\n                    <div className='container col'>\r\n                        <p>\r\n                            <b>From - </b>\r\n                            <a href={'/profile/'+this.state.from}>\r\n                                {this.state.from}\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                    <div className='container col'>\r\n                    <p>\r\n                            <b>To - </b>\r\n                            <a href={'/profile/'+this.state.to}>\r\n                                {this.state.to}\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='container row'>\r\n                    <div className='container col'>\r\n                        <p><b>Value - </b> {this.state.value} ethers </p>\r\n                    </div>\r\n                    <div className='container col'>\r\n                        <p><b>Gas Used - </b> {this.state.gasUsed} ethers</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TransactionCard;","import React, { Component } from 'react';\r\nimport TransactionCard from './TransactionCard';\r\n\r\nclass TransactionList extends Component {\r\n    render() {\r\n        var listOfTransactions =  this.props.list.map((t, index)=> {\r\n                                return <div className='container row' key={'tx-'+index}>\r\n                                            <div className=\"container col-1 border\">\r\n                                                {index+1}\r\n                                            </div>\r\n                                            <div className=\"container col border\">\r\n                                                <TransactionCard tx = {t} web3 = {this.props.web3}/>\r\n                                            </div>\r\n                                        </div>\r\n                                });\r\n        if(listOfTransactions.length === 0){\r\n            listOfTransactions = <p>No transactions found!</p>\r\n        }\r\n        return ( \r\n            <div className=\"container border\">\r\n                {listOfTransactions}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default TransactionList;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"container\">\r\n                <p><Link to={()=>'/profile/'+this.props.contact.contact_address}>{this.props.contact.contact_name}</Link></p>\r\n                <p>{this.props.contact.contact_address}</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\nclass ContactList extends Component {\r\n    render() { \r\n        var list_of_contacts = this.props.list.map((contact, index)=> {\r\n            return (<div className='container row border' key={'contact_'+index}>\r\n                        <div className='container col-1 border-right'>\r\n                            {index}\r\n                        </div>\r\n                        <div className='container col'>\r\n                            <Contact contact={contact}/>\r\n                        </div>     \r\n                    </div>)\r\n        });\r\n        if(list_of_contacts.length == 0){\r\n            list_of_contacts = <p>No saved contact found!</p>\r\n        }\r\n        return ( \r\n            <div>\r\n                {list_of_contacts}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ContactList;","import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {addr: \"\"};\r\n    }\r\n\r\n    handleAddressChange = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({addr: event.target.value});\r\n    }\r\n\r\n    goToProfile = (event)=>{\r\n        event.preventDefault();\r\n        window.location.href = 'profile/'+this.state.addr;\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div className=\"container\">\r\n            <label name=\"searchAddress\">Address</label>\r\n            <input id=\"searchAddress\" type=\"text\" onChange={this.handleAddressChange}/>\r\n            <button type=\"submit\" onClick={this.goToProfile}>Go</button>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport getWeb3 from '../getWeb3';\r\nimport TransactionList from './TransactionList';\r\nimport ContactList from './ContactList';\r\nimport SearchBar from './SearchBar';\r\nimport axios from 'axios'\r\n\r\n//import TransactionList from './TransactionList';\r\n\r\n// dummy transactions\r\nconst txList = [\r\n    { \r\n        hash: \"0x0356c9a5b86d4b085abb6b0ed0058758bd68ca6d1f6928d5ebd368088e3fa9ea\",\r\n        date: new Date(\"2019-05-13\")\r\n    },\r\n    {\r\n        hash: \"0x304b9de0021fcec047b27fce0939544c46c9edf86e57e9663b15d79812e253e4\",\r\n        date: new Date(\"2019-07-17\")\r\n    }\r\n];\r\n\r\nconst savedAccounts = [\r\n    {contact_name: \"Alice\", contact_address: \"0x072Ee7De3d14c072f2a993F22C071606B498f527\"},\r\n    {contcat_name: \"Raghav\", contact_address: \"0xcaca4cd658a660083C4c0b55281bE79849Ff6bB0\"}\r\n]\r\n\r\nclass HomePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {providedAddress:0x0, balance:0, contacts:[], transactions:[],\r\n        errors:[]};\r\n    }\r\n\r\n   async componentDidMount(){\r\n       try{\r\n            var address = await this.props.web3.eth.getAccounts();\r\n            address = address[0];\r\n            this.setState({providedAddress: address});\r\n            axios.get('http://localhost:8000/api/contact/', {params: {owner: address}}).then(\r\n                (resp) =>{\r\n                    //console.log(resp);\r\n                    if(resp.status === 200){\r\n                        this.setState({contacts: resp.data});\r\n                    } else {\r\n                        alert(\"Unknown status while fetching contacts\\n\"+resp.statusText);\r\n                    }\r\n                },\r\n                (err) => {\r\n                    alert(\"An error occured while fetching contacts!\\n\"+err);\r\n                }\r\n            );\r\n            axios.get('http://localhost:8000/api/tx/', {params: {owner: address}}).then(\r\n                (resp) => {\r\n                    if(resp.status === 200){\r\n                        this.setState({transactions: resp.data});\r\n                    }else{\r\n                        alert(\"Unknown status while fetching transactions\\n\"+resp.statusText);\r\n                    }\r\n                },\r\n                (err) => { \r\n                    alert(\"An error occured while fetching transactions!\\n\"+err);\r\n                }\r\n            );\r\n       }catch{\r\n           console.log(\"Loading address!\");\r\n       }\r\n   }\r\n    render() { \r\n        return ( \r\n            <div id = 'My Page' className=\"container\">\r\n                <SearchBar/>\r\n                <div className=\"container row\">\r\n                    <div className=\"container col-5\">\r\n                        <h1>My Profile</h1>\r\n                        <Profile address={this.state.providedAddress} web3={this.props.web3}/>\r\n                    </div>\r\n                    <div className=\"container col\">\r\n                        <h1>My Contacts</h1>\r\n                        <ContactList list={this.state.contacts}/>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"container-fluid row\">\r\n                    <div className=\"container col\">\r\n                        <h1>My Transactions</h1>\r\n                        <TransactionList list={this.state.transactions} web3 = {this.props.web3}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default HomePage;","import React, { Component } from 'react';\r\n\r\nclass PaymentBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {amount: 0, unit: \"eth\"};\r\n    }\r\n\r\n    handleAmountChange = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({amount: event.target.value});\r\n    }\r\n\r\n    handleUnitChange = (event) =>{\r\n        event.preventDefault();\r\n        var newUnit = event.target.value;\r\n        this.setState({unit: newUnit});\r\n    }\r\n\r\n    handlePayment = () =>{\r\n        var amt = this.state.amount;\r\n        this.props.paymentMethod(amt);\r\n    }\r\n\r\n    render() { \r\n        return ( <div className=\"container border\">\r\n            <input type=\"text\" id=\"amount\" name=\"amount\" onChange={this.handleAmountChange} value={this.state.amount}/>\r\n            <select id=\"unit\" name=\"unit\" onChange={this.handleUnitChange}>\r\n                <option value=\"eth\">Ether</option>\r\n                <option value=\"wei\">Wei</option>\r\n            </select>\r\n            <button type=\"submit\" onClick={() => this.props.paymentMethod(this.state.amount, this.state.unit)}>Pay</button>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default PaymentBar;","import React, { Component } from 'react';\r\nimport axios from \"axios\"\r\n\r\nclass AddToContact extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {isContact : false};\r\n    }\r\n\r\n    createContact = ()=>{\r\n            var name = prompt();\r\n            var saving = { owner: this.props.myAddress, contact_address: this.props.currentAddress, contact_name: name};\r\n            console.log(saving);\r\n            // add api call\r\n            axios.post('http://localhost:8000/api/contact/', {data: saving}).then(\r\n                (resp) => {\r\n                    console.log(resp);\r\n                },\r\n                (err) => {\r\n                    alert(\"An error occured while saving contact!\\n\"+err);\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    showContact(){\r\n        if(this.props.isContact){\r\n            return null;\r\n        }else{\r\n            return <button type=\"submit\" onClick={this.createContact}>Save contact</button>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className=\"container\">\r\n                {this.showContact()}\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddToContact;","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport {Link} from 'react-router-dom';\r\nimport TransactionList from './TransactionList';\r\nimport PaymentBar from './PaymentBar';\r\nimport AddToContact from './AddToContact';\r\nimport axios from \"axios\";\r\n\r\n// dummy transactions\r\nconst txList = [\r\n    { \r\n        txHash: \"0x0356c9a5b86d4b085abb6b0ed0058758bd68ca6d1f6928d5ebd368088e3fa9ea\",\r\n        date_of_transaction: new Date(\"2019-05-13\")\r\n    },\r\n    {\r\n        txHash: \"0x304b9de0021fcec047b27fce0939544c46c9edf86e57e9663b15d79812e253e4\",\r\n        date_of_transaction: new Date(\"2019-07-17\")\r\n    }\r\n];\r\n\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n                        myAddress: null, \r\n                        currentAddress: this.props.match.params.address, \r\n                        currentBalance: 0,\r\n                        transactions: [],\r\n                    };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const myAddr = (await this.props.web3.eth.getAccounts())[0];\r\n            var curBal = (await this.props.web3.eth.getBalance(this.state.currentAddress));\r\n            curBal = this.props.web3.utils.fromWei(curBal, \"ether\");\r\n            this.setState({myAddress: myAddr, currentBalance: curBal});\r\n            axios.get('http://localhost:8000/api/tx/', {params:{owner: this.state.currentAddress}}).then(\r\n                (resp) => {\r\n                    if(resp.status == 200){\r\n                        this.setState({transactions: resp.data});\r\n                    }else{\r\n                        alert(\"Unkown response while fetching transactions!\\n\"+resp.statusText);\r\n                    }\r\n                },\r\n                (err) => {\r\n                    alert(\"Error while fetching transactions!\\n\"+err);\r\n                }\r\n            );\r\n            axios.get('http://localhost:8000/api/iscontact/', {params : {owner: myAddr, contact_address: this.state.currentAddress}}).then(\r\n                (resp) =>{\r\n                    if(resp.status == 200){\r\n                        console.log(\"Is Contact? - \", resp.data);\r\n                        this.setState({isContact: resp.data});\r\n                    }else{\r\n                        alert(\"Unknown response while fetching contact relation!\\n\",resp.statusText);\r\n                    }\r\n                },\r\n                (err) => {\r\n                    alert(\"Error while fetching contact relation!\\n\"+err);\r\n                }\r\n            )\r\n        }catch(err){\r\n            console.error(err);\r\n        }\r\n        \r\n    }\r\n\r\n    makePayment = (amount, unit) => {\r\n\r\n        try{\r\n            var tx = {\r\n                        from: this.state.myAddress, \r\n                        to: this.state.currentAddress, \r\n                        value: (unit===\"eth\")?this.props.web3.utils.toWei(amount, \"ether\"):amount\r\n                    };\r\n            console.log(tx);\r\n            this.props.web3.eth.sendTransaction(tx).then((receipt)=>{\r\n                console.log(\"Transaction Successful!\");\r\n                console.log(receipt);\r\n                axios.post('http://localhost:8000/api/tx/', {data: {owner: this.state.myAddress, txHash: receipt.transactionHash}}).then(\r\n                    (resp) =>{\r\n                        console.log(\"Transaction saved - \", resp);\r\n                    },\r\n                    (err) => {\r\n                        console.error(err);\r\n                    }\r\n                )\r\n            }, \r\n            (err)=>{\r\n                console.error(err);\r\n            }).finally(()=>{\r\n                console.log(\"Transaction complete!\");\r\n            });\r\n        }catch(err){\r\n            console.error(err);\r\n        }\r\n\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div id='ProfilePage'>\r\n                <div className=\"navbar navbar-expand-lg bg-light navbar-light\" id='navbar'>\r\n                    <p className=\"navbar-brand\">EthContact</p>\r\n                    <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n                    </div>\r\n                </div>\r\n                <div id = 'content'>\r\n                    <h1> Profile Page </h1>\r\n                    <Profile address={this.state.currentAddress} web3={this.props.web3}/>\r\n                    <AddToContact myAddress={this.state.myAddress} currentAddress={this.state.currentAddress} isContact={this.state.isContact}/>\r\n                    <PaymentBar paymentMethod={this.makePayment} valueConvertor={this.props.web3}/>\r\n                    <TransactionList list={this.state.transactions} web3 = {this.props.web3}/>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProfilePage;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Transaction extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var entries = [];\r\n        try{\r\n            var txRes = await this.props.web3.eth.getTransaction(this.props.match.params.txHash);\r\n            this.setState(txRes);\r\n        }catch{\r\n\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div id = 'TransactionPage'>\r\n                <div className=\"navbar navbar-expand-lg bg-light navbar-light\" id='navbar'>\r\n                    <p className=\"navbar-brand\">EthContact</p>\r\n                    <div className=\"navbar-nav\">\r\n                        <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n                    </div>\r\n                </div>\r\n                \r\n                <h2> Transaction - {this.props.match.params.txHash} </h2>\r\n                <div id='result'>\r\n                    <table id='resList' className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Parameter</th>\r\n                                <th>Value</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Transction Hash</td>\r\n                                <td>{this.state.hash}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>From</td>\r\n                                <td><Link to={()=>'/profile/'+this.state.from}>{this.state.from}</Link></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>To</td>\r\n                                <td><Link to={()=>'/profile/'+this.state.to}>{this.state.to}</Link></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Block Hash</td>\r\n                                <td>{this.state.blockHash}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Block Number</td>\r\n                                <td>{this.state.blockNumber}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Gas</td>\r\n                                <td>{this.state.gas}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Gas Price</td>\r\n                                <td>{this.state.gasPrice}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Nonce</td>\r\n                                <td>{this.state.nonce}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Value</td>\r\n                                <td>{this.state.value}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Transaction;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './components/HomePage';\nimport ProfilePage from './components/ProfilePage';\nimport TransactionPage from './components/TransactionPage';\nimport {BrowserRouter, Route, Link, Switch, Redirect} from 'react-router-dom';\nimport getWeb3 from './getWeb3';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {web3:null};\n  }\n\n  async componentDidMount(){\n    var web3Ins = await getWeb3();\n    this.setState({web3: web3Ins});\n  }\n  render(){\n    var page = \n    <div>\n      <BrowserRouter>\n      <Switch>\n        <Route path='/home' component = {() => <HomePage web3 = {this.state.web3}/> } name=\"homepage\"></Route>\n        <Route path='/profile/:address' component = {(props) => <ProfilePage web3 = {this.state.web3} {...props}/> } name=\"profilepage\"></Route>\n        <Route path='/transaction/:txHash' exact component = {(props) => <TransactionPage web3 = {this.state.web3} {...props}/> } name=\"profilepage\"></Route>\n        <Route from='/'><Redirect from=\"\" to=\"/home\"/></Route>\n      </Switch>\n      </BrowserRouter>\n    </div>;\n    return page;\n    //return <div>Waiting for web3!</div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}